{
    "Download": "Download"
    "Community": "Community"
    "Documentation": "Documentation"
    "Updates": "Updates"
    "Your free, open-source <br> game engine.": "Your free, open-source <br> game engine."
    "Divelop your 2D programs and games without writing code!": "Develop your 2D programs and games without writing code!"
    "Latest news": "Latest news"
    "A different way to make programs": "A different way to make programs"
    "Language": "Language"
    "Node editor": "Node editor"
    "The Node Editor makes it easy to write programs without writing text code, which has over 70 unique nodes.": "The Node Editor makes it easy to write programs without writing text code, which has over 70 unique nodes."
    "Open source": "Open source"
    "Game Engine 3 is free and available to every user. The source code can be found in the repository on GitHub.": "Game Engine 3 is free and available to every user. The source code can be found in the repository on GitHub."
    "Interface": "Interface"
    "Game Engine 3's interface is intuitive and allows you to quickly get used to the program": "Game Engine 3's interface is intuitive and allows you to quickly get used to the program"
    "On our Discord server you can share your projects, communicate with other users and help with the development of the program": "On our Discord server you can share your projects, communicate with other users and help with the development of the program"
    "On our server you can share your projects, communicate with other users and help with the development of the program": "On our server you can share your projects, communicate with other users and help with the development of the program"
    "Game Engine 3 is an open-source project. We welcome community contributions": "Game Engine 3 is an open-source project. We welcome community contributions"
    "Bug reports": "Bug reports"
    "Feature suggestions": "Feature suggestions"
    "Code and fixes": "Code and fixes"
    "Documentation and examples": "Documentation and examples"
    "Nodes": "Nodes"
    "List of all nodes, documentation on their use": "List of all nodes, documentation on their use"
    "First program": "First program"
    "Documentation for creating the first program": "Documentation for creating the first program"
    "Events": "Events",
    "On start game": "On start game",
    "Returns path on start program": "Returns path on start program",
    "Input": "Input",
    "Output": "Output",
    "path": "path",
    "On load scene": "On load scene",
    "Returns path on load scene": "Returns path on load scene",
    "Every N frames": "Every N frames",
    "Returns path every N frames": "Returns path every N frames",
    "N": "N",
    "Every N ticks": "Every N ticks",
    "Returns path every N ticks": "Returns path every N ticks",
    "Mouse right click": "Mouse right click",
    "Returns path on mouse right click": "Returns path on mouse right click",
    "Mouse left click": "Mouse left click",
    "Returns path on mouse left click": "Returns path on mouse left click",
    "Keyboard click": "Keyboard click",
    "Returns path on click the button": "Returns path on click the button",
    "button": "button",
    "Keyboard press": "Keyboard press",
    "Returns path while press the button": "Returns path while press the button",
    "On button press": "On button press",
    "Returns path and button ID on button press": "Returns path and button ID on button press",
    "object ID": "object ID",
    "Loops": "Loops",
    "For N times": "For N times",
    "Inputs path, count of cycles, delay in seconds between cycles": "Inputs path, count of cycles, delay in seconds between cycles",
    "Returns iterator (path that is called every cycle), index of cycle, path after cycles": "Returns iterator (path that is called every cycle), index of cycle, path after cycles",
    "X": "X",
    "iterator": "iterator",
    "index": "index",
    "after": "after",
    "For objects group": "For objects group",
    "Inputs path, object group": "Inputs path, object group",
    "Returns iterator (path that is called every cycle), ID of object, path after cycles": "Returns iterator (path that is called every cycle), ID of object, path after cycles",
    "group": "group",
    "For list elements": "For list elements",
    "Inputs path, list": "Inputs path, list",
    "Returns iterator (path that is called every cycle), index of element, element, path after cycles": "Returns iterator (path that is called every cycle), index of element, element, path after cycles",
    "list": "list",
    "element": "element",
    "For dict elements": "For dict elements",
    "Inputs path, dict": "Inputs path, dict",
    "Returns iterator (path that is called every cycle), key of element, element, path after cycles": "Returns iterator (path that is called every cycle), key of element, element, path after cycles",
    "dict": "dict",
    "key": "key",
    "Text": "Text",
    "Connect text": "Connect text",
    "Inputs path, first text, second text and returns sum of this texts": "Inputs path, first text, second text and returns sum of this texts",
    "text": "text",
    "Slice text": "Slice text",
    "Inputs path, text, start index and end index": "Inputs path, text, start index and end index",
    "Returns text starts with start index and end with end index": "Returns text starts with start index and end with end index",
    "start": "start",
    "end": "end",
    "Write text": "Write text",
    "Write text in console": "Write text in console",
    "Display text": "Display text",
    "Display text on X, Y in this frame": "Display text on X, Y in this frame",
    "Y": "Y",
    "Numbers": "Numbers",
    "A + B": "A + B",
    "Returns A + B": "Returns A + B",
    "A": "A",
    "B": "B",
    "answer": "answer",
    "A - B": "A - B",
    "Returns A - B": "Returns A - B",
    "A * B": "A * B",
    "Returns A * B": "Returns A * B",
    "A / B": "A / B",
    "Returns A / B": "Returns A / B",
    "Radians": "Radians",
    "Returns radians from degrees": "Returns radians from degrees",
    "degrees": "degrees",
    "radians": "radians",
    "Degrees": "Degrees",
    "Returns degrees from radians": "Returns degrees from radians",
    "Sin": "Sin",
    "Returns sin from radians": "Returns sin from radians",
    "Cos": "Cos",
    "Returns cos from radians": "Returns cos from radians",
    "Tan": "Tan",
    "Returns tan from radians": "Returns tan from radians",
    "Ctg": "Ctg",
    "Returns ctg from radians": "Returns ctg from radians",
    "Absolute of number": "Absolute of number",
    "Returns absolute from number": "Returns absolute from number",
    "number": "number",
    "Logic": "Logic",
    "If": "If",
    "If condition true return true path else false path": "If condition true return true path else false path",
    "condition": "condition",
    "true path": "true path",
    "false path": "false path",
    "If collision": "If collision",
    "If object collision group return true path and object id else false path": "If object collision group return true path and object id else false path",
    "consider only intersection as a collision": "consider only intersection as a collision",
    "If key in dict": "If key in dict",
    "If key in dict return true path and object id else false path": "If key in dict return true path and object id else false path",
    "If element in list": "If element in list",
    "If element in list return true path and object id else false path": "If element in list return true path and object id else false path",
    "Objects": "Objects",
    "Get object ID by name": "Get object ID by name",
    "Return object ID by name": "Return object ID by name",
    "name": "name",
    "Set object pos": "Set object pos",
    "Set object pos for object by ID": "Set object pos for object by ID",
    "Move object": "Move object",
    "Move object for object by ID": "Move object for object by ID",
    "Move object for object by ID by angle with power": "Move object for object by ID by angle with power",
    "angle": "angle",
    "power": "power",
    "Move object with braking": "Move object with braking",
    "Move object for object by ID by angle with power and braking power": "Move object for object by ID by angle with power and braking power",
    "braking": "braking",
    "Get object pos": "Get object pos",
    "Returns object position": "Returns object position",
    "Set object var": "Set object var",
    "Set object variable for object by ID with name and value": "Set object variable for object by ID with name and value",
    "value": "value",
    "Get object var": "Get object var",
    "Returns object by ID variable value by name": "Returns object by ID variable value by name",
    "Create object": "Create object",
    "Create object by name and position and returns object ID": "Create object by name and position and returns object ID",
    "Remove object": "Remove object",
    "Remove object by ID": "Remove object by ID",
    "Get resulting vector": "Get resulting vector",
    "Returns resultings of all vectors in object by ID": "Returns resultings of all vectors in object by ID",
    "Get object parameter": "Get object parameter",
    "Returns object parameter by object ID and parameter name": "Returns object parameter by object ID and parameter name",
    "Set object parameter": "Set object parameter",
    "Set object value of object parameter by object ID and parameter name": "Set object value of object parameter by object ID and parameter name",
    "Get all objects in group": "Get all objects in group",
    "Returns list of all objects in group": "Returns list of all objects in group",
    "Jump": "Jump",
    "Imitate jump for object by ID with power": "Imitate jump for object by ID with power",
    "OBJECT MUST BY DYNAMIC!!!": "OBJECT MUST BY DYNAMIC!!!",
    "Animation": "Animation",
    "Run animation": "Run animation",
    "Run animation for object by ID and animation name": "Run animation for object by ID and animation name",
    "Stop animation": "Stop animation",
    "Stop animation for object by ID": "Stop animation for object by ID",
    "Mirror animation": "Mirror animation",
    "Mirror animations for object by ID vertically and horizontally": "Mirror animations for object by ID vertically and horizontally",
    "horizontal": "horizontal",
    "vertical": "vertical",
    "Another": "Another",
    "Set var": "Set var",
    "Set variable value by name and globality variable": "Set variable value by name and globality variable",
    "global": "global",
    "Get var": "Get var",
    "Returns variable value by name and globality variable": "Returns variable value by name and globality variable",
    "Random": "Random",
    "Returns random number from A to B": "Returns random number from A to B",
    "Decode holder": "Decode holder",
    "Decode text holder to value": "Decode text holder to value",
    "Holders": "Holders",
    "%math(expression) -> return answer on this expression": "%math(expression) -> return answer on this expression",
    "%local_var(variable) -> return value of local variable": "%local_var(variable) -> return value of local variable",
    "%global_var(variable) -> return value of global variable": "%global_var(variable) -> return value of global variable",
    "Example": "Example",
    "let: local variable abc = 1": "let: local variable abc = 1",
    "%math(%local_var(abc) + 2) -> 3": "%math(%local_var(abc) + 2) -> 3",
    "Len": "Len",
    "Returns len of object, if object type is not dict or list return 1": "Returns len of object, if object type is not dict or list return 1",
    "object": "object",
    "len": "len",
    "Exit": "Exit",
    "Close project": "Close project",
    "Python": "Python",
    "Running code in function \"run\" with args = list, kwargs = dict": "Running code in function \"run\" with args = list, kwargs = dict",
    "What will be returned via return in code will be returned to the list output": "What will be returned via return in code will be returned to the list output",
    "A more detailed guide can be found in the Programming tab": "A more detailed guide can be found in the Programming tab",
    "code": "code",
    "Function": "Function",
    "Initializate function with function name, on call return path and getted list": "Initializate function with function name, on call return path and getted list",
    "function name": "function name",
    "Call function": "Call function",
    "Call function by name with list value": "Call function by name with list value",
    "Get mouse pos": "Get mouse pos",
    "Returns mouse position": "Returns mouse position",
    "Passed framef time": "Passed framef time",
    "Returns passed time - count ms for update frame": "Returns passed time - count ms for update frame",
    "passed time": "passed time",
    "Go to scene": "Go to scene",
    "Go to scene by name": "Go to scene by name",
    "scene": "scene",
    "Get scene name": "Get scene name",
    "Return scene name": "Return scene name",
    "Wait": "Wait",
    "Wait N frames": "Wait N frames",
    "time": "time",
    "Break": "Break",
    "Break from the cycle": "Break from the cycle",
    "Set": "Set",
    "Add list element": "Add list element",
    "Returns list with new element": "Returns list with new element",
    "Get by index": "Get by index",
    "Returns element of list by index": "Returns element of list by index",
    "Delete by index": "Delete by index",
    "Returns list without element by index": "Returns list without element by index",
    "Get index of element": "Get index of element",
    "Returns index of element in list": "Returns index of element in list",
    "Slice list": "Slice list",
    "Returns list starts with start index and end with end index": "Returns list starts with start index and end with end index",
    "Add dict element": "Add dict element",
    "Returns dict with new element by key": "Returns dict with new element by key",
    "Get by key": "Get by key",
    "Returns element by key in dict": "Returns element by key in dict",
    "Remove by key": "Remove by key",
    "Return dict without element by key in dict": "Return dict without element by key in dict",
    "Get key of element": "Get key of element",
    "Returns key of element in dict": "Returns key of element in dict",
    "Music": "Music",
    "Play music": "Play music",
    "Play music by name with volume": "Play music by name with volume",
    "volume": "volume",
    "Stop music": "Stop music",
    "Play sound": "Play sound",
    "Play sound by name with volume": "Play sound by name with volume",
    "Experimental": "Experimental",
    "Get noise value": "Get noise value",
    "Return value of Perlin noise in X, Y": "Return value of Perlin noise in X, Y",
    "seed": "seed",
    "min": "min",
    "max": "max",
    "octaves": "octaves",
    "frequency": "frequency",
    "amplitude": "amplitude",
    "lacunarity": "lacunarity",
    "persistence": "persistence"

    "Documentation on the creation of the first program Hello World!": "Documentation on the creation of the first program Hello World!",
    "Creating project": "Creating project",
    "Click on the File menu and select Create": "Click on the File menu and select Create",
    "In the window that appears, write the name of the project and click the create button": "In the window that appears, write the name of the project and click the create button",
    "Creating first object": "Creating first object",
    "In the opened project, right-click on the objects folder, click create and object": "In the opened project, right-click on the objects folder, click create and object",
    "We write the name of the object (in the documentation it will be player)": "We write the name of the object (in the documentation it will be player)",
    "After that we had an object in the left menu": "After that we had an object in the left menu",
    "Adding image": "Adding image",
    "Copy any picture from your computer and paste it into the assets folder": "Copy any picture from your computer and paste it into the assets folder",
    "Object settings": "Object settings",
    "Double click on the object and a menu with the object parameters opens in the center": "Double click on the object and a menu with the object parameters opens in the center",
    "Creating scene": "Creating scene",
    "Right-click on the scenes folder, click the create button and select the scene": "Right-click on the scenes folder, click the create button and select the scene",
    "In the window that opens, write the name of the scene": "In the window that opens, write the name of the scene",
    "In the scene, right-click on the center, click create object and click create": "In the scene, right-click on the center, click create object and click create",
    "In the menu on the left in the scene tab we have our object": "In the menu on the left in the scene tab we have our object",
    "In the menu on the left in the focus object tab we must enter the name of the object that we found on the left": "In the menu on the left in the focus object tab we must enter the name of the object that we found on the left",
    "After this the camera will be centered on this object": "After this the camera will be centered on this object",
    "Project config": "Project config",
    "Open file project.cfg": "Open file project.cfg",
    "Here we can configure the main parameters of our project": "Here we can configure the main parameters of our project",
    "Opposite the start scene, click on the button and select our scene": "Opposite the start scene, click on the button and select our scene",
    "Now the basis of our project is ready": "Now the basis of our project is ready",
    "Create function": "Create function",
    "Right-click on the functions folder, click the create button and select the function": "Right-click on the functions folder, click the create button and select the function",
    "Open the function": "Open the function",
    "In the function we can write various programs and algorithms for our program": "In the function we can write various programs and algorithms for our program",
    "Right-click on the grid and select create": "Right-click on the grid and select create",
    "In this menu, open the basic nodes and select the node on start game, click create": "In this menu, open the basic nodes and select the node on start game, click create",
    "According to this principle, we select the node to write text and create it": "According to this principle, we select the node to write text and create it",
    "In the input field in the text writing node we write Hello World!": "In the input field in the text writing node we write Hello World!",
    "The node on start game is the beginning of our program, after the program starts we should display the text": "The node on start game is the beginning of our program, after the program starts we should display the text",
    "We connect the game start node with the text output starting from the first one, with this we show the program that we need to output the text after the game starts": "We connect the game start node with the text output starting from the first one, with this we show the program that we need to output the text after the game starts",
    "Now when we launch the game, Hello World! will be displayed in the console": "Now when we launch the game, Hello World! will be displayed in the console",
    "Run project": "Run project",
    "To run a project, click on Project in the menu at the top and select Run": "To run a project, click on Project in the menu at the top and select Run",
    "If everything was done correctly, you will be able to see Hello World! in the console and the character will be shown on the scene": "If everything was done correctly, you will be able to see Hello World! in the console and the character will be shown on the scene"

    "Variables": "Variables"
    "Documentation on working with variables": "Documentation on working with variables"
    "The start": "The start",
    "We will use the project made in the previous documentation": "We will use the project made in the previous documentation",
    "First program": "First program",
    "All variables are divided into 3 groups": "All variables are divided into 3 groups",
    "Global variables": "Global variables",
    "Local variables": "Local variables",
    "Object variables": "Object variables",
    "Creating variables": "Creating variables",
    "Global variables can be created in functions and in config.cfg": "Global variables can be created in functions and in config.cfg",
    "Locals variables can be created in functions and exists only in this function": "Locals variables can be created in functions and exists only in this function",
    "Object variables can be created in objects (.obj and .cobj in scene), variables unique for every object": "Object variables can be created in objects (.obj and .cobj in scene), variables unique for every object",
    "Using global and local variables": "Using global and local variables",
    "Using the get variable and set variable nodes, you can manage local and global variables": "Using the get variable and set variable nodes, you can manage local and global variables",
    "In this example, we get the local variable var1 and output its contents to the console, we also get the variable var2, add 5 to it and save it": "In this example, we get the local variable var1 and output its contents to the console, we also get the variable var2, add 5 to it and save it",
    "Using object variables": "Using object variables",
    "To use object variables we need nodes get object variable and set object variable, they differ from the previous ones in that they have one more parameter - object ID": "To use object variables we need nodes get object variable and set object variable, they differ from the previous ones in that they have one more parameter - object ID",
    "To get the object ID, we need the get object ID by name node, which accepts the object name when adding it to the scene": "To get the object ID, we need the get object ID by name node, which accepts the object name when adding it to the scene",
    "To create an object variable, select the object on the stage and set the variables in the window on the right": "To create an object variable, select the object on the stage and set the variables in the window on the right",
    "They will also be copied from the object that was used to add to the scene, if you have previously added them to this object": "They will also be copied from the object that was used to add to the scene, if you have previously added them to this object"
}
