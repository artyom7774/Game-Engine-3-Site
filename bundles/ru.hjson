{
    "Download": "Скачать"
    "Community": "Сообщество"
    "Documentation": "Документация"
    "Updates": "Обновления"
    "Your free, open-source <br> game engine.": "Ваш бесплатный игровой движок <br> с открытым исходным кодом."
    "Divelop your 2D programs and games without writing code!": "Создавайте 2D программы и игры без написания кода!"
    "Latest news": "Последние новости"
    "A different way to make programs": "Другой способ создания программ"
    "Language": "Язык"
    "Node editor": "Редактор нодов"
    "The Node Editor makes it easy to write programs without writing text code, which has over 70 unique nodes.": "Редактор нодов позволяет легко создавать программы без написания текстового кода, имея более 70 уникальных нодов."
    "Open source": "Открытый исходный код"
    "Game Engine 3 is free and available to every user. The source code can be found in the repository on GitHub.": "Game Engine 3 бесплатен и доступен каждому пользователю. Исходный код можно найти в репозитории на GitHub."
    "Interface": "Интерфейс"
    "Game Engine 3's interface is intuitive and allows you to quickly get used to the program": "Интерфейс Game Engine 3 интуитивен и позволяет быстро освоиться с программой."
    "On our Discord server you can share your projects, communicate with other users and help with the development of the program": "На нашем Discord-сервере вы можете делиться проектами, общаться с другими пользователями и помогать в разработке Game Engine 3."
    "On our server you can share your projects, communicate with other users and help with the development of the program": "На нашем сервере вы можете делиться проектами, общаться с другими пользователями и помогать в разработке Game Engine 3."
    "Game Engine 3 is an open-source project. We welcome community contributions": "Game Engine 3 - проект с открытым исходным кодом. Мы приветствуем вклад сообщества"
    "Bug reports": "Сообщения об ошибках"
    "Feature suggestions": "Предложения по улучшению"
    "Code and fixes": "Код и исправления"
    "Documentation and examples": "Документации и примеры"
    "Nodes": "Ноды"
    "List of all nodes, documentation on their use": "Список всех нодов, документация по их использованию"
    "First program": "Первая программа"
    "Documentation for creating the first program": "Документация по созданию первой программы"
    "Events": "События",
    "On start game": "При запуске игры",
    "Returns path on start program": "Возвращает путь при запуске программы",
    "Input": "Вход",
    "Output": "Выход",
    "path": "путь",
    "On load scene": "При загрузке сцены",
    "Returns path on load scene": "Возвращает путь при загрузке сцены",
    "Every N frames": "Каждые N кадров",
    "Returns path every N frames": "Возвращает путь каждые N кадров",
    "N": "N",
    "Every N ticks": "Каждые N тиков",
    "Returns path every N ticks": "Возвращает путь каждые N тиков",
    "Mouse right click": "Правый клик мыши",
    "Returns path on mouse right click": "Возвращает путь при правом клике мыши",
    "Mouse left click": "Левый клик мыши",
    "Returns path on mouse left click": "Возвращает путь при левом клике мыши",
    "Keyboard click": "Нажатие клавиши",
    "Returns path on click the button": "Возвращает путь при нажатии кнопки",
    "button": "кнопка",
    "Keyboard press": "Удержание клавиши",
    "Returns path while press the button": "Возвращает путь при удержании кнопки",
    "On button press": "При нажатии кнопки",
    "Returns path and button ID on button press": "Возвращает путь и ID кнопки при нажатии",
    "object ID": "ID объекта",
    "Loops": "Циклы",
    "For N times": "N раз",
    "Inputs path, count of cycles, delay in seconds between cycles": "Принимает путь, количество циклов, задержку в секундах между циклами",
    "Returns iterator (path that is called every cycle), index of cycle, path after cycles": "Возвращает итератор (путь, вызываемый каждый цикл), индекс цикла, путь после циклов",
    "X": "X",
    "iterator": "итератор",
    "index": "индекс",
    "after": "после",
    "For objects group": "Для группы объектов",
    "Inputs path, object group": "Принимает путь, группу объектов",
    "Returns iterator (path that is called every cycle), ID of object, path after cycles": "Возвращает итератор (путь, вызываемый каждый цикл), ID объекта, путь после циклов",
    "group": "группа",
    "For list elements": "Для элементов списка",
    "Inputs path, list": "Принимает путь, список",
    "Returns iterator (path that is called every cycle), index of element, element, path after cycles": "Возвращает итератор (путь, вызываемый каждый цикл), индекс элемента, элемент, путь после циклов",
    "list": "список",
    "element": "элемент",
    "For dict elements": "Для элементов словаря",
    "Inputs path, dict": "Принимает путь, словарь",
    "Returns iterator (path that is called every cycle), key of element, element, path after cycles": "Возвращает итератор (путь, вызываемый каждый цикл), ключ элемента, элемент, путь после циклов",
    "dict": "словарь",
    "key": "ключ",
    "Text": "Текст",
    "Connect text": "Соединить текст",
    "Inputs path, first text, second text and returns sum of this texts": "Принимает путь, первый текст, второй текст и возвращает сумму этих текстов",
    "text": "текст",
    "Slice text": "Обрезать текст",
    "Inputs path, text, start index and end index": "Принимает путь, текст, начальный индекс и конечный индекс",
    "Returns text starts with start index and end with end index": "Возвращает текст, начинающийся с начального индекса и заканчивающийся конечным индексом",
    "start": "начало",
    "end": "конец",
    "Write text": "Записать текст",
    "Write text in console": "Записать текст в консоль",
    "Display text": "Отобразить текст",
    "Display text on X, Y in this frame": "Отобразить текст на X, Y в этом кадре",
    "Y": "Y",
    "Numbers": "Числа",
    "A + B": "A + B",
    "Returns A + B": "Возвращает A + B",
    "A": "A",
    "B": "B",
    "answer": "ответ",
    "A - B": "A - B",
    "Returns A - B": "Возвращает A - B",
    "A * B": "A * B",
    "Returns A * B": "Возвращает A * B",
    "A / B": "A / B",
    "Returns A / B": "Возвращает A / B",
    "Radians": "Радианы",
    "Returns radians from degrees": "Возвращает радианы из градусов",
    "degrees": "градусы",
    "radians": "радианы",
    "Degrees": "Градусы",
    "Returns degrees from radians": "Возвращает градусы из радиан",
    "Sin": "Синус",
    "Returns sin from radians": "Возвращает синус из радиан",
    "Cos": "Косинус",
    "Returns cos from radians": "Возвращает косинус из радиан",
    "Tan": "Тангенс",
    "Returns tan from radians": "Возвращает тангенс из радиан",
    "Ctg": "Котангенс",
    "Returns ctg from radians": "Возвращает котангенс из радиан",
    "Absolute of number": "Модуль числа",
    "Returns absolute from number": "Возвращает модуль числа",
    "number": "число",
    "Logic": "Логика",
    "If": "Если",
    "If condition true return true path else false path": "Если условие истинно, возвращает путь истины, иначе путь лжи",
    "condition": "условие",
    "true path": "путь истины",
    "false path": "путь лжи",
    "If collision": "Если столкновение",
    "If object collision group return true path and object id else false path": "Если объект сталкивается с группой, возвращает путь истины и ID объекта, иначе путь лжи",
    "consider only intersection as a collision": "считать столкновением только пересечение",
    "If key in dict": "Если ключ в словаре",
    "If key in dict return true path and object id else false path": "Если ключ в словаре, возвращает путь истины и ID объекта, иначе путь лжи",
    "If element in list": "Если элемент в списке",
    "If element in list return true path and object id else false path": "Если элемент в списке, возвращает путь истины и ID объекта, иначе путь лжи",
    "Objects": "Объекты",
    "Get object ID by name": "Получить ID объекта по имени",
    "Return object ID by name": "Возвращает ID объекта по имени",
    "name": "имя",
    "Set object pos": "Установить позицию объекта",
    "Set object pos for object by ID": "Установить позицию объекта по ID",
    "Move object": "Переместить объект",
    "Move object for object by ID": "Переместить объект по ID",
    "Move object for object by ID by angle with power": "Переместить объект по ID под углом с силой",
    "angle": "угол",
    "power": "сила",
    "Move object with braking": "Переместить объект с торможением",
    "Move object for object by ID by angle with power and braking power": "Переместить объект по ID под углом с силой и силой торможения",
    "braking": "торможение",
    "Get object pos": "Получить позицию объекта",
    "Returns object position": "Возвращает позицию объекта",
    "Set object var": "Установить переменную объекта",
    "Set object variable for object by ID with name and value": "Установить переменную объекта по ID с именем и значением",
    "value": "значение",
    "Get object var": "Получить переменную объекта",
    "Returns object by ID variable value by name": "Возвращает значение переменной объекта по ID и имени",
    "Create object": "Создать объект",
    "Create object by name and position and returns object ID": "Создать объект по имени и позиции и возвращает ID объекта",
    "Remove object": "Удалить объект",
    "Remove object by ID": "Удалить объект по ID",
    "Get resulting vector": "Получить результирующий вектор",
    "Returns resultings of all vectors in object by ID": "Возвращает результат всех векторов в объекте по ID",
    "Get object parameter": "Получить параметр объекта",
    "Returns object parameter by object ID and parameter name": "Возвращает параметр объекта по ID объекта и имени параметра",
    "Set object parameter": "Установить параметр объекта",
    "Set object value of object parameter by object ID and parameter name": "Установить значение параметра объекта по ID объекта и имени параметра",
    "Get all objects in group": "Получить все объекты в группе",
    "Returns list of all objects in group": "Возвращает список всех объектов в группе",
    "Jump": "Прыжок",
    "Imitate jump for object by ID with power": "Имитировать прыжок для объекта по ID с силой",
    "OBJECT MUST BY DYNAMIC!!!": "ОБЪЕКТ ДОЛЖЕН БЫТЬ ДИНАМИЧЕСКИМ!!!",
    "Animation": "Анимация",
    "Run animation": "Запустить анимацию",
    "Run animation for object by ID and animation name": "Запустить анимацию для объекта по ID и имени анимации",
    "Stop animation": "Остановить анимацию",
    "Stop animation for object by ID": "Остановить анимацию для объекта по ID",
    "Mirror animation": "Отразить анимацию",
    "Mirror animations for object by ID vertically and horizontally": "Отразить анимацию для объекта по ID вертикально и горизонтально",
    "horizontal": "горизонтально",
    "vertical": "вертикально",
    "Another": "Другое",
    "Set var": "Установить переменную",
    "Set variable value by name and globality variable": "Установить значение переменной по имени и глобальности переменной",
    "global": "глобальная",
    "Get var": "Получить переменную",
    "Returns variable value by name and globality variable": "Возвращает значение переменной по имени и глобальности переменной",
    "Random": "Случайное",
    "Returns random number from A to B": "Возвращает случайное число от A до B",
    "Decode holder": "Декодировать держатель",
    "Decode text holder to value": "Декодировать текстовый держатель в значение",
    "Holders": "Держатели",
    "%math(expression) -> return answer on this expression": "%math(выражение) -> возвращает ответ на это выражение",
    "%local_var(variable) -> return value of local variable": "%local_var(переменная) -> возвращает значение локальной переменной",
    "%global_var(variable) -> return value of global variable": "%global_var(переменная) -> возвращает значение глобальной переменной",
    "Example": "Пример",
    "let: local variable abc = 1": "пусть: локальная переменная abc = 1",
    "%math(%local_var(abc) + 2) -> 3": "%math(%local_var(abc) + 2) -> 3",
    "Len": "Длина",
    "Returns len of object, if object type is not dict or list return 1": "Возвращает длину объекта, если тип объекта не словарь или список, возвращает 1",
    "object": "объект",
    "len": "длина",
    "Exit": "Выход",
    "Close project": "Закрыть проект",
    "Python": "Python",
    "Running code in function \"run\" with args = list, kwargs = dict": "Выполнение кода в функции \"run\" с args = список, kwargs = словарь",
    "What will be returned via return in code will be returned to the list output": "То, что будет возвращено через return в коде, будет возвращено в выходной список",
    "A more detailed guide can be found in the Programming tab": "Более подробное руководство можно найти во вкладке Программирование",
    "code": "код",
    "Function": "Функция",
    "Initializate function with function name, on call return path and getted list": "Инициализировать функцию с именем функции, при вызове возвращает путь и полученный список",
    "function name": "имя функции",
    "Call function": "Вызвать функцию",
    "Call function by name with list value": "Вызвать функцию по имени со значением списка",
    "Get mouse pos": "Получить позицию мыши",
    "Returns mouse position": "Возвращает позицию мыши",
    "Passed framef time": "Прошедшее время кадра",
    "Returns passed time - count ms for update frame": "Возвращает прошедшее время - количество мс для обновления кадра",
    "passed time": "прошедшее время",
    "Go to scene": "Перейти к сцене",
    "Go to scene by name": "Перейти к сцене по имени",
    "scene": "сцена",
    "Get scene name": "Получить имя сцены",
    "Return scene name": "Возвращает имя сцены",
    "Wait": "Ждать",
    "Wait N frames": "Ждать N кадров",
    "time": "время",
    "Break": "Прервать",
    "Break from the cycle": "Выйти из цикла",
    "Set": "Множество",
    "Add list element": "Добавить элемент в список",
    "Returns list with new element": "Возвращает список с новым элементом",
    "Get by index": "Получить по индексу",
    "Returns element of list by index": "Возвращает элемент списка по индексу",
    "Delete by index": "Удалить по индексу",
    "Returns list without element by index": "Возвращает список без элемента по индексу",
    "Get index of element": "Получить индекс элемента",
    "Returns index of element in list": "Возвращает индекс элемента в списке",
    "Slice list": "Обрезать список",
    "Returns list starts with start index and end with end index": "Возвращает список, начинающийся с начального индекса и заканчивающийся конечным индексом",
    "Add dict element": "Добавить элемент в словарь",
    "Returns dict with new element by key": "Возвращает словарь с новым элементом по ключу",
    "Get by key": "Получить по ключу",
    "Returns element by key in dict": "Возвращает элемент по ключу в словаре",
    "Remove by key": "Удалить по ключу",
    "Return dict without element by key in dict": "Возвращает словарь без элемента по ключу в словаре",
    "Get key of element": "Получить ключ элемента",
    "Returns key of element in dict": "Возвращает ключ элемента в словаре",
    "Music": "Музыка",
    "Play music": "Воспроизвести музыку",
    "Play music by name with volume": "Воспроизвести музыку по имени с громкостью",
    "volume": "громкость",
    "Stop music": "Остановить музыку",
    "Play sound": "Воспроизвести звук",
    "Play sound by name with volume": "Воспроизвести звук по имени с громкостью",
    "Experimental": "Экспериментальное",
    "Get noise value": "Получить значение шума",
    "Return value of Perlin noise in X, Y": "Возвращает значение шума Перлина в X, Y",
    "seed": "зерно",
    "min": "минимум",
    "max": "максимум",
    "octaves": "октавы",
    "frequency": "частота",
    "amplitude": "амплитуда",
    "lacunarity": "лакунарность",
    "persistence": "настойчивость"

    "Documentation on the creation of the first program Hello World!": "Документация по созданию первой программы Hello World!",
    "Creating project": "Создание проекта",
    "Click on the File menu and select Create": "Нажмите на меню Файл и выберите Создать",
    "In the window that appears, write the name of the project and click the create button": "В появившемся окне напишите имя проекта и нажмите кнопку создать",
    "Creating first object": "Создание первого объекта",
    "In the opened project, right-click on the objects folder, click create and object": "В открытом проекте щелкните правой кнопкой мыши по папке объектов, нажмите создать и объект",
    "We write the name of the object (in the documentation it will be player)": "Пишем имя объекта (в документации это будет player)",
    "After that we had an object in the left menu": "После этого у нас появился объект в левом меню",
    "Adding image": "Добавление изображения",
    "Copy any picture from your computer and paste it into the assets folder": "Скопируйте любую картинку с вашего компьютера и вставьте ее в папку assets",
    "Object settings": "Настройки объекта",
    "Double click on the object and a menu with the object parameters opens in the center": "Дважды щелкните по объекту и в центре откроется меню с параметрами объекта",
    "Creating scene": "Создание сцены",
    "Right-click on the scenes folder, click the create button and select the scene": "Щелкните правой кнопкой мыши по папке сцен, нажмите кнопку создать и выберите сцену",
    "In the window that opens, write the name of the scene": "В открывшемся окне напишите имя сцены",
    "In the scene, right-click on the center, click create object and click create": "В сцене щелкните правой кнопкой мыши по центру, нажмите создать объект и нажмите создать",
    "In the menu on the left in the scene tab we have our object": "В меню слева во вкладке сцена у нас есть наш объект",
    "In the menu on the left in the focus object tab we must enter the name of the object that we found on the left": "В меню слева во вкладке фокус объекта мы должны ввести имя объекта, который мы нашли слева",
    "After this the camera will be centered on this object": "После этого камера будет центрирована на этом объекте",
    "Project config": "Конфигурация проекта",
    "Open file project.cfg": "Откройте файл project.cfg",
    "Here we can configure the main parameters of our project": "Здесь мы можем настроить основные параметры нашего проекта",
    "Opposite the start scene, click on the button and select our scene": "Напротив начальной сцены нажмите на кнопку и выберите нашу сцену",
    "Now the basis of our project is ready": "Теперь основа нашего проекта готова",
    "Create function": "Создание функции",
    "Right-click on the functions folder, click the create button and select the function": "Щелкните правой кнопкой мыши по папке функций, нажмите кнопку создать и выберите функцию",
    "Open the function": "Откройте функцию",
    "In the function we can write various programs and algorithms for our program": "В функции мы можем писать различные программы и алгоритмы для нашей программы",
    "Right-click on the grid and select create": "Щелкните правой кнопкой мыши по сетке и выберите создать",
    "In this menu, open the basic nodes and select the node on start game, click create": "В этом меню откройте базовые ноды и выберите нод при запуске игры, нажмите создать",
    "According to this principle, we select the node to write text and create it": "По этому принципу выбираем нод для написания текста и создаем его",
    "In the input field in the text writing node we write Hello World!": "В поле ввода в ноде написания текста мы пишем Hello World!",
    "The node on start game is the beginning of our program, after the program starts we should display the text": "Нод при запуске игры - это начало нашей программы, после запуска программы мы должны отобразить текст",
    "We connect the game start node with the text output starting from the first one, with this we show the program that we need to output the text after the game starts": "Мы соединяем нод запуска игры с выводом текста, начиная с первого, этим мы показываем программе, что нам нужно вывести текст после запуска игры",
    "Now when we launch the game, Hello World! will be displayed in the console": "Теперь при запуске игры Hello World! будет отображаться в консоли",
    "Run project": "Запуск проекта",
    "To run a project, click on Project in the menu at the top and select Run": "Чтобы запустить проект, нажмите на Проект в меню вверху и выберите Запустить",
    "If everything was done correctly, you will be able to see Hello World! in the console and the character will be shown on the scene": "Если все было сделано правильно, вы сможете увидеть Hello World! в консоли и персонаж будет показан на сцене"

    "Variables": "Переменные",
    "Documentation on working with variables": "Документация по работе с переменными",
    "The start": "Начало",
    "We will use the project made in the previous documentation": "Мы будем использовать проект, созданный в предыдущей документации",
    "First program": "Первая программа",
    "All variables are divided into 3 groups": "Все переменные разделены на 3 группы",
    "Global variables": "Глобальные переменные",
    "Local variables": "Локальные переменные",
    "Object variables": "Переменные объектов",
    "Creating variables": "Создание переменных",
    "Global variables can be created in functions and in config.cfg": "Глобальные переменные могут быть созданы в функциях и в config.cfg",
    "Locals variables can be created in functions and exists only in this function": "Локальные переменные могут быть созданы в функциях и существуют только в этой функции",
    "Object variables can be created in objects (.obj and .cobj in scene), variables unique for every object": "Переменные объектов могут быть созданы в объектах (.obj и .cobj в сцене), переменные уникальны для каждого объекта",
    "Using global and local variables": "Использование глобальных и локальных переменных",
    "Using the get variable and set variable nodes, you can manage local and global variables": "Используя ноды получения переменной и установки переменной, вы можете управлять локальными и глобальными переменными",
    "In this example, we get the local variable var1 and output its contents to the console, we also get the variable var2, add 5 to it and save it": "В этом примере мы получаем локальную переменную var1 и выводим её содержимое в консоль, также получаем переменную var2, добавляем к ней 5 и сохраняем её",
    "Using object variables": "Использование переменных объектов",
    "To use object variables we need nodes get object variable and set object variable, they differ from the previous ones in that they have one more parameter - object ID": "Для использования переменных объектов нам нужны ноды получения переменной объекта и установки переменной объекта, они отличаются от предыдущих тем, что имеют ещё один параметр - ID объекта",
    "To get the object ID, we need the get object ID by name node, which accepts the object name when adding it to the scene": "Чтобы получить ID объекта, нам нужен нод получения ID объекта по имени, который принимает имя объекта при добавлении его в сцену",
    "To create an object variable, select the object on the stage and set the variables in the window on the right": "Чтобы создать переменную объекта, выберите объект на сцене и установите переменные в окне справа",
    "They will also be copied from the object that was used to add to the scene, if you have previously added them to this object": "Они также будут скопированы из объекта, который использовался для добавления в сцену, если вы ранее добавляли их к этому объекту"

    "Documentation on working with Python node and programming": "Документация по работе с Python нодом и программированием",
    "Start": "Начало",
    "We will use the project made in the previous documentation": "Мы будем использовать проект, созданный в предыдущей документации",
    "First program": "Первая программа",
    "Python node allows you to write code in this language and execute the written functions in the program": "Python нод позволяет писать код на этом языке и выполнять написанные функции в программе",
    "Create nodes": "Создание нодов",
    "Create a node On game start and Python": "Создать нод При старте игры и Python",
    "Python node takes 3 parameters: code to execute, arguments as a list, arguments as a dictionary, and returns the list that the function returns": "Python нод принимает 3 параметра: код для выполнения, аргументы в виде списка, аргументы в виде словаря, и возвращает список, который возвращает функция",
    "Programming": "Программирование",
    "When you click on the button in the node, a window opens in which you can write code in Python": "При нажатии на кнопку в ноле открывается окно, в котором можно писать код на Python",
    "Only the code that is in the run function will be executed": "Будет выполняться только код, который находится в функции run",
    "Functions": "Функции",
    "Below is a list of all functions that copy the functionality of nodes": "Ниже приведен список всех функций, которые копируют функционал нодов",
    "return decoded value": "вернуть декодированное значение",
    "close project": "закрыть проект",
    "return variable by name and globality": "вернуть переменную по имени и глобальности",
    "set value to variable by name and globality": "установить значение переменной по имени и глобальности",
    "return all objects in group": "вернуть все объекты в группе",
    "return random number in [a, b]": "вернуть случайное число в диапазоне [a, b]",
    "write text on console": "записать текст в консоль",
    "display text on scene in x, y": "отобразить текст на сцене в координатах x, y",
    "return [True, object ID] if collision else [False, -1]. Append - count contact as a collision": "вернуть [True, ID объекта] при столкновении, иначе [False, -1]. Append - считать касание столкновением",
    "create object by name in dir objects and place this on x, y": "создать объект по имени из папки objects и разместить его в координатах x, y",
    "return ID of object by name. Name have object which were created on stage before running": "вернуть ID объекта по имени. Имя есть у объектов, которые были созданы на сцене до запуска",
    "return object x, y by ID": "вернуть координаты объекта x, y по ID",
    "set position for object by ID": "установить позицию для объекта по ID",
    "return variable by object ID and name": "вернуть переменную по ID объекта и имени",
    "set value to variable by id and name": "установить значение переменной по ID и имени",
    "jump for object by ID": "прыжок для объекта по ID",
    "create moving vector by angle and power for object ID": "создать вектор движения по углу и силе для объекта по ID",
    "create moving vector bu angle, power and braking speed foor object ID": "создать вектор движения по углу, силе и скорости торможения для объекта по ID",
    "remove object by ID": "удалить объект по ID",
    "returns [x, y] - the resulting all vectors for object by ID": "возвращает [x, y] - результирующие все векторы для объекта по ID",
    "starts the animation for the object by ID": "запускает анимацию для объекта по ID",
    "sets the animation to the base if it exists, otherwise sets the object's sprite for the object by ID": "устанавливает анимацию в базовое состояние, если она существует, иначе устанавливает спрайт объекта по ID",
    "mirrors animations of the object by ID horizontally and vertically, sets True for reflection on this axis": "отражает анимации объекта по ID по горизонтали и вертикали, устанавливает True для отражения по этой оси",
    "return mouse x, y": "вернуть координаты мыши x, y",
    "set object parameter for object by ID": "установить параметр объекта для объекта по ID",
    "return object parameter for object by ID": "вернуть параметр объекта для объекта по ID",
    "return frame time passed": "вернуть время, прошедшее с предыдущего кадра",
    "return Perlin noise value on X, Y": "вернуть значение шума Перлина в точке X, Y",
    "return sin X": "вернуть sin X",
    "return cos X": "вернуть cos X",
    "return tan X": "вернуть tan X",
    "return ctg X": "вернуть ctg X",
    "return degrees from radians": "вернуть градусы из радианов",
    "return radians from degrees": "вернуть радианы из градусов",
    "go to scene by name": "перейти к сцене по имени",
    "return scene name": "вернуть имя сцены",
    "play music by path": "воспроизвести музыку по пути",
    "stop music": "остановить музыку",
    "play sound by path": "воспроизвести звук по пути"
}
